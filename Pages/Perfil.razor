@page "/perfil";
@inject Api api;
@inject IJSRuntime js;
@inject NavigationStacker navManager;

<div class="w-full h-full overflow-y-auto gap-3 flex flex-col bg-zinc-800">
    <MarkseHeader />
    <div class="w-full flex-1 overflow-y-auto gap-5 flex-col">
        <div class="w-full flex flex-col items-center gap-2 justify-center">
            @if (!loadingAssinature)
            {
                @if (assinature == null)
                {
                    <h1 class="text-red-400">Aconteceu alguma coisa de errado ao carregar o seu plano</h1>
                    <div class="flex w-[300px]">
                        <ButtonStyled>Tentar novamente</ButtonStyled>
                    </div>
                }
                else
                {
                    <h1 class="text-white text-xl">Plano ativo</h1>
                    <h2 class="text-green-500 text-lg">
                        @{
                            if (assinature.Level == 0)
                            {
                                <span>Gratuito</span>
                            }
                            else if (assinature.Level == 1)
                            {
                                <span>Basico</span>
                            }
                            else if (assinature.Level == 2)
                            {
                                <span>Premium</span>
                            }
                        }
                    </h2>
                    if (assinature.Level == 0 || assinature.Level == 1)
                    {
                        <div class="flex w-[300px]">
                            <ButtonStyled OnClick=@(() => navManager.NavigateTo("/upgrade-plano"))>Dar um up no meu plano</ButtonStyled>
                        </div>
                    }
                }
            }
            else
            {
                <h1 class="text-white">Estamos carregando seus plano</h1>
            }
        </div>

        <ShowAddress />
        <div class="w-full flex flex-col pl-4">
            <ListCreditCards />
        </div>
    </div>
</div>

@code {
    bool loadingAssinature = true;
    Assinature? assinature = null;
    UserAddress? address = null;

    protected override async Task OnInitializedAsync()
    {
        await GetCurrentAssinature();
    }

    async Task GetCurrentAssinature()
    {
        loadingAssinature = true;
        StateHasChanged();

        var res = await api.Get(api.walliClient.getCurrentPlan, await api.GetLoginHeader());

        if (res?.IsSuccessStatusCode != true)
            return;

        assinature = JsonSerializer.Deserialize<Assinature>(await res.Content.ReadAsStringAsync());
        loadingAssinature = false;

        StateHasChanged();
    }

    async Task BuyAssinature()
    {
        //await api.Post("http://localhost:5190/walli/client/buy-assinature?", "", await api.GetLoginHeader());
    }
}