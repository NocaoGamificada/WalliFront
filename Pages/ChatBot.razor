@page "/chat";
@inject Api api;
@inject LocalStorage localStorage;

@if (loading)
{
    <div class="flex w-full h-full justify-center items-center">
        <Loading />
    </div>
}
else
{
    <div class="flex flex-col gap-2 w-full h-full bg-zinc-200 overflow-y-auto items-center pt-0">
        <div class="w-full flex justify-center">
            <img src="images/icones/bot-icon.png" class="hidden md:flex w-[120px]"/>
        </div>
        <div class="w-full md:w-[55%] md:bg-zinc-500 md:rounded-3xl md:py-2 gap-3 flex flex-col flex-1 overflow-y-auto gap-3">
            @if (chatMessages != null)
            {
                foreach (var message in chatMessages)
                {
                    <Message OnReSend="ReSendMessage" ChatMessage="message" />
                }
            }
        </div>
        <div class="py-1 md:py-3 w-full md:w-[60%] flex flex-row justify-center gap-4 items-center">
            <input @bind="currentMessage" @onkeyup=KeyboardInput placeholder="Digite sua mensagem!" class="w-[70%] md:w-full pl-3 py-2 ml-4 max-h-[100px]" />
            <img @onclick=SendMessage src="images/icones/paper-plane.png" class="w-[32px] h-[32px] cursor-pointer"/>
        </div>
    </div>
}

@code{
    string currentMessage = string.Empty;

    List<ChatMessage> chatMessages = new();
    bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        var res = await api.Get(api.walliChat.loadMessages, await api.GetLoginHeader());

        if (res?.IsSuccessStatusCode == true)
        {
            chatMessages = JsonSerializer.Deserialize<List<ChatMessage>>(await res.Content.ReadAsStringAsync());
        }

        loading = false;
        StateHasChanged();
    }

    bool sending = false;

    async Task SendMessage()
    {
        if (sending)
            return;

        if (currentMessage == string.Empty)
            return;

        sending = true;
        var mess = new ChatMessage
        {
            IsBotMessage = false,
            Message = currentMessage,
            IsLoading = true
        };

        chatMessages?.Add(mess);
        currentMessage = "";
        StateHasChanged();

        var res = await api.Post(api.walliChat.sendMessage + $"?message={mess.Message}", "", await api.GetLoginHeader());
        mess.HaveError = res?.IsSuccessStatusCode == false;

        if (res?.IsSuccessStatusCode == true)
        {
            var botMess = JsonSerializer.Deserialize<ChatMessage>(await res.Content.ReadAsStringAsync());
            if (botMess != null)
                chatMessages.Add(botMess);
        }

        mess.IsLoading = false;

        sending = false;
        StateHasChanged();
    }

    async Task KeyboardInput(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SendMessage();
        }
    }

    async Task ReSendMessage(ChatMessage mess)
    {
        mess.HaveError = false;
        StateHasChanged();

        var res = await api.Post(api.walliChat.sendMessage + $"?message={mess.Message}", string.Empty, await api.GetLoginHeader());
        
        if (res?.IsSuccessStatusCode == true)
        {
            var botMess = JsonSerializer.Deserialize<ChatMessage>(await res.Content.ReadAsStringAsync());
            if (botMess != null)
                chatMessages.Add(botMess);
        }

        mess.HaveError = res?.IsSuccessStatusCode == false;
        StateHasChanged();
    }
}