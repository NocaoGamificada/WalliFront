
<div class="w-full relative flex flex-1 justify-center items-center flex-col gap-3"  >
    <label for=@Id class="text-xl text-white">@CustomLabel</label>

    <div class="relative relative w-full flex flex-1 justify-center flex-col">
        <h1 id=@Id @onclick=OnCollapse class="w-full rounded-3xl bg-zinc-800 px-3 py-2 cursor-pointer text-white">@Current.Label</h1>
        
        <div class="absolute py-2 flex items-center justify-center mt-8 top-[20%] w-full @hidden">
            <div style="z-index: 1;" class="w-[90%] bg-zinc-800 shadow-lg rounded-3xl flex flex-col gap-1">
                @for (int i = 0; i < Data.Length; i++)
                {
                    var data = Data[i];
                    <DropDownOption Index="i" Label=@(data.Label) OnSelected="OnSelected" />
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public DropdownData[] Data { get; set; }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public Action OnChangeSelected { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public RenderFragment CustomLabel { get; set; }

    public int SelectedIndex { get; set; } = 0;
    public DropdownData Current { get => Data[SelectedIndex]; }

    private bool collapesed = true;
    private string hidden { get => collapesed ? "hidden" : ""; }

    void OnCollapse()
    {
        collapesed = !collapesed;
    }

    void OnSelected(int index)
    {
        SelectedIndex = index;
        OnChangeSelected?.Invoke();
        collapesed = true;
        StateHasChanged();
    }
}
