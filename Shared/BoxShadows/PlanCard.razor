@inject LocalStorage localStorage;
@inject NavigationStacker navManager;

<div style="@IsDestaque()" class="card-plan rounded-xl h-[480px] flex flex-col justify-between items-center pt-2 pb-3 md:py-2 w-[280px]">
    <div class="flex flex-col w-full flex jsutify-center items-center py-2 font-extrabold text-white">
        <h2 class="@(Destaque ? "text-4xl" : "text-4xl") fot-bold">R$ @CardPrice</h2>
        <p class="font-semibold text-white text-lg">por mês</p>

        <div class="flex flex-col gap-4 w-full items-center">
            <h1 class="text-3xl font-extrabold text-white">@CardTitle</h1>
            <div style="background: rgba(23,15,56,140);" class="w-full h-[0.5px] bg-zinc-400" />
        </div>
    </div>

    <ul class="w-full flex flex-col pl-7 flex flex-col gap-2 text-white">
        @CardVantagens
    </ul>

    @if (!IsActive)
    {
        <button style="@ButtonColor()" @onclick=@(async () =>{
            if (logged){
                OnSelected?.Invoke(Level);
            }else{
                await navManager.NavigateTo("/login");
            }
        }) class="border-0 outline-0 bg-[rgb(55, 72, 240)] px-4 text-white rounded-xl text-lg font-bold py-2 hover:scale-110 hover:bg-green-500 transition-all duration-200">Obter plano</button>
    }
    else
    {
        <button style="@ButtonColor()" disabled class="bg-[rgb(55, 72, 240)] border-0 outline-0 px-4 text-white rounded-xl text-lg font-bold py-2">Plano Ativo</button>
    }
</div>

@code {
    [Parameter]
    public bool Destaque { get; set; }

    [Parameter]
    public Action<int>? OnSelected { get; set; }

    [Parameter]
    public int Level { get; set; }

    [Parameter]
    public bool IsActive { get; set; } = false;

    [Parameter]
    public RenderFragment CardTitle { get; set; }

    [Parameter]
    public RenderFragment CardVantagens { get; set; }

    [Parameter]
    public RenderFragment CardPrice { get; set; }

    private bool logged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        logged = await localStorage.CheckAuthSession();
    }

    public string IsDestaque()
    {
        //if (Destaque)
        //    return "background-color: rgb(109 66 191 / 45%);";

        return "background-color: rgb(86 69 157 / 45%);";
    }

    public string ButtonColor()
    {
        //if (Destaque)
        //    return "background-color: rgb(245, 63, 207);";

        return "background-color: rgba(55, 72, 240, 200);";
    }

}